version: '3'

services:

  produto:
    image: produto:latest
    restart: always
    build:
      context: ./produto
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
      - "5005:5005"
    depends_on:
      - mongo
      - keycloak
    networks:
      - mongo-compose-network
    environment:
      DB_HOST: mongo
      KC_HOST: "http://keycloak:8080"
      SPRING_ADMIN: "http://springadmin:8085"
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"

  springadmin:
    image: springadmin:latest
    restart: always
    build:
      context: ./admin
      dockerfile: Dockerfile
    ports:
      - "8085:8085"
    networks:
      - mongo-compose-network

  mongo:
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    networks:
      - mongo-compose-network
    volumes:
      - ./docker_volume/mongo/data:/data/db/
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - "8081:8081"
    depends_on:
      - mongo
    networks:
      - mongo-compose-network
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_BASICAUTH_USERNAME: root
      ME_CONFIG_BASICAUTH_PASSWORD: root
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root

  mysql:
    container_name: mysql
    image: mysql:5.7
    restart: always
    ports:
      - "3306:3306"
    networks:
      - mongo-compose-network
    volumes:
      - ./docker_volume/mysql/data:/var/lib/mysql/
      - ./docker_volume/mysql/conf.d:/etc/mysql/conf.d/
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: keycloak
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: password
      MYSQL_ROOT_HOST: '%'

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - "8090:80"
    depends_on:
      - mysql
    networks:
      - mongo-compose-network
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: password

  keycloak:
    container_name: keycloak
    image: jboss/keycloak:13.0.1
    restart: always
    ports:
      - "8083:8080"
    depends_on:
      - mysql
    networks:
      - mongo-compose-network
    volumes:
      - ./docker_volume/keycloak/data/:/opt/jboss/keycloak/standalone/data/
      - ./docker_volume/keycloak/configuration/:/opt/jboss/keycloak/standalone/configuration/
    environment:
      DB_VENDOR: MYSQL
      DB_ADDR: mysql
      DB_PORT: 3306
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_USER: keycloak
      KEYCLOAK_PASSWORD: password

  prometheus:
    image: prom/prometheus:v2.35.0
    restart: always
    ports:
      - "9090:9090"
    networks:
      - mongo-compose-network
    depends_on:
      - produto
    volumes:
      - ./docker_volume/prometheus/config:/etc/prometheus/
      - ./docker_volume/prometheus/data:/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'

  grafana:
    image: grafana/grafana
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - mongo-compose-network
    volumes:
      - ./docker_volume/grafana/data:/var/lib/grafana/

networks:
  mongo-compose-network:
    driver: bridge